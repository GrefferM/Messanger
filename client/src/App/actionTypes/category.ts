import { 
    iCategoryBase,
    iCategoryProduct
} from '~interface/iCategory'
import iProps from '~interface/iProps'

export const ACTION_ADD_CATEGORY_BASE_START      = 'ACTION_ADD_CATEGORY_BASE_START'
export const ACTION_ADD_CATEGORY_BASE_SUCCESS    = 'ACTION_ADD_CATEGORY_BASE_SUCCESS'
export const ACTION_ADD_CATEGORY_BASE_FAILURE    = 'ACTION_ADD_CATEGORY_BASE_FAILURE'
export const ACTION_GET_CATEGORY_BASE_START      = 'ACTION_GET_CATEGORY_BASE_START'
export const ACTION_GET_CATEGORY_BASE_SUCCESS    = 'ACTION_GET_CATEGORY_BASE_SUCCESS'
export const ACTION_GET_CATEGORY_BASE_FAILURE    = 'ACTION_GET_CATEGORY_BASE_FAILURE'
export const ACTION_ADD_CATEGORY_PRODUCT_START   = 'ACTION_ADD_CATEGORY_PRODUCT_START'
export const ACTION_ADD_CATEGORY_PRODUCT_SUCCESS = 'ACTION_ADD_CATEGORY_PRODUCT_SUCCESS'
export const ACTION_ADD_CATEGORY_PRODUCT_FAILURE = 'ACTION_ADD_CATEGORY_PRODUCT_FAILURE'
export const ACTION_GET_CATEGORY_PRODUCT_START   = 'ACTION_GET_CATEGORY_PRODUCT_START'
export const ACTION_GET_CATEGORY_PRODUCT_SUCCESS = 'ACTION_GET_CATEGORY_PRODUCT_SUCCESS'
export const ACTION_GET_CATEGORY_PRODUCT_FAILURE = 'ACTION_GET_CATEGORY_PRODUCT_FAILURE'

export interface iAddCategoryBaseAction {
    type: typeof ACTION_ADD_CATEGORY_BASE_SUCCESS
    payload: iProps
}
export interface iGetCategoryBaseAction {
    type: typeof ACTION_GET_CATEGORY_BASE_SUCCESS
    payload: iCategoryBase
}

export interface iAddCategoryProductAction {
    type: typeof ACTION_ADD_CATEGORY_PRODUCT_SUCCESS
    payload: iProps
}

export interface iGetCategoryProductAction {
    type: typeof ACTION_GET_CATEGORY_PRODUCT_SUCCESS
    payload: iCategoryProduct
}